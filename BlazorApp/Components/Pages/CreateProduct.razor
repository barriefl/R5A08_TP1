@page "/create-product"
@using BlazorApp.Models
@using BlazorApp.ViewModels
@inject CreateProductViewModel ViewModel

<PageTitle>Create a product</PageTitle>

<h1>Create a product</h1>

<Toasts class="p-3" Messages="messages" Placement="ToastsPlacement.TopRight" />

<EditForm Model="@ViewModel" OnValidSubmit="OnSubmitAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">Name:</div>
    <div class="mb-3">
        <TextInput @bind-Value="@ViewModel.NameProduct" Placeholder="Name" />
    </div>

    <div class="mb-3">Description:</div>
    <div class="mb-3">
        <TextInput @bind-Value="@ViewModel.Description" Placeholder="Description" />
    </div>

    <div class="mb-3">Brand:</div>
    <div class="mb-3">
        <TextInput @bind-Value="@ViewModel.NameBrand" Placeholder="Brand" />
    </div>

    <div class="mb-3">Product Type:</div>
    <div class="mb-3">
        <TextInput @bind-Value="@ViewModel.NameProductType" Placeholder="Product Type" />
    </div>

    <div class="mb-3">Photo Name:</div>
    <div class="mb-3">
        <TextInput @bind-Value="@ViewModel.PhotoName" Placeholder="Photo Name" />
    </div>

    <div class="mb-3">Uri Photo:</div>
    <div class="mb-3">
        <TextInput @bind-Value="@ViewModel.UriPhoto" Placeholder="Uri Photo" />
    </div>

    <div class="mb-3">Real Stock:</div>
    <div class="mb-3">
        <NumberInput @bind-Value="@ViewModel.RealStock" Placeholder="Real Stock" />
    </div>

    <div class="mb-3">Min Stock:</div>
    <div class="mb-3">
        <NumberInput @bind-Value="@ViewModel.MinStock" Placeholder="Min Stock" />
    </div>

    <div class="mb-3">Max Stock:</div>
    <div class="mb-3">
        <NumberInput @bind-Value="@ViewModel.MaxStock" Placeholder="Max Stock" />
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    List<ToastMessage> messages = new List<ToastMessage>();

    private async void OnSubmitAsync()
    {
        Product product = ViewModel.ViewModelToModel();
        bool success = await ViewModel.AddProductAsync(product);
        if (success)
        {
            AddToastMessage(ToastType.Success, "Product created.", "Product created with success !");
        }
        else
        {
            AddToastMessage(ToastType.Danger, "Error.", "Failed to create the product.");
        }
    }

    private void AddToastMessage(ToastType type, string title, string message)
    {
        messages.Add(new ToastMessage
        {
            Type = type,
            Title = title,
            Message = message
        });

        StateHasChanged();
    }
}
