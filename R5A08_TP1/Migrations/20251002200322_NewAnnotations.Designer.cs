// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using R5A08_TP1.Models.EntityFramework;

#nullable disable

namespace R5A08_TP1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002200322_NewAnnotations")]
    partial class NewAnnotations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Brand", b =>
                {
                    b.Property<int>("IdBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bran_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBrand"));

                    b.Property<string>("NameBrand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bran_name");

                    b.HasKey("IdBrand")
                        .HasName("brand_pkey");

                    b.ToTable("t_e_brand_bran", "public");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prod_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("DescriptionProduct")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("prod_description");

                    b.Property<int?>("IdBrand")
                        .HasColumnType("integer")
                        .HasColumnName("bran_id");

                    b.Property<int?>("IdProductType")
                        .HasColumnType("integer")
                        .HasColumnName("prty_id");

                    b.Property<int>("MaxStock")
                        .HasColumnType("integer")
                        .HasColumnName("prod_maxstock");

                    b.Property<int>("MinStock")
                        .HasColumnType("integer")
                        .HasColumnName("prod_minstock");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prod_nameproduct");

                    b.Property<string>("PhotoNameProduct")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("prod_photoname");

                    b.Property<int>("RealStock")
                        .HasColumnType("integer")
                        .HasColumnName("prod_realstock");

                    b.Property<string>("UriPhotoProduct")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("prod_uriphoto");

                    b.HasKey("IdProduct")
                        .HasName("product_pkey");

                    b.HasIndex("IdBrand");

                    b.HasIndex("IdProductType");

                    b.ToTable("t_e_product_prod", "public");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.ProductType", b =>
                {
                    b.Property<int>("IdProductType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prty_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProductType"));

                    b.Property<string>("NameProductType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prty_name");

                    b.HasKey("IdProductType")
                        .HasName("producttype_pkey");

                    b.ToTable("t_e_producttype_prty", "public");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Product", b =>
                {
                    b.HasOne("R5A08_TP1.Models.EntityFramework.Brand", "BrandNavigation")
                        .WithMany("RelatedProductsBrand")
                        .HasForeignKey("IdBrand")
                        .HasConstraintName("FK_products_brand");

                    b.HasOne("R5A08_TP1.Models.EntityFramework.ProductType", "ProductTypeNavigation")
                        .WithMany("RelatedProductsProductType")
                        .HasForeignKey("IdProductType")
                        .HasConstraintName("FK_products_product_type");

                    b.Navigation("BrandNavigation");

                    b.Navigation("ProductTypeNavigation");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Brand", b =>
                {
                    b.Navigation("RelatedProductsBrand");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.ProductType", b =>
                {
                    b.Navigation("RelatedProductsProductType");
                });
#pragma warning restore 612, 618
        }
    }
}
